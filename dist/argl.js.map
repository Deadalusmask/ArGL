{"version":3,"sources":["webpack://ArGL/webpack/universalModuleDefinition","webpack://ArGL/webpack/bootstrap","webpack://ArGL/./src/FBHelper.js","webpack://ArGL/./src/argl.js","webpack://ArGL/./src/camera/camera.js","webpack://ArGL/./src/camera/free-move-camrea.js","webpack://ArGL/./src/camera/orbit-camera.js","webpack://ArGL/./src/index.js","webpack://ArGL/./src/input.js","webpack://ArGL/./src/shader.js","webpack://ArGL/./src/util.js","webpack://ArGL/external {\"root\":\"window\",\"commonjs\":\"gl-matrix\",\"commonjs2\":\"gl-matrix\",\"amd\":\"gl-matrix\"}","webpack://ArGL/external {\"root\":\"Hammer\",\"commonjs\":\"hammerjs\",\"commonjs2\":\"hammerjs\",\"amd\":\"hammerjs\"}","webpack://ArGL/external {\"root\":\"OBJ\",\"commonjs\":\"webgl-obj-loader\",\"commonjs2\":\"webgl-obj-loader\",\"amd\":\"webgl-obj-loader\"}"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;AClFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACjHgC;AACC;AACjC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,uBAAuB;AAChF;AACA;AACA,sDAAsD,4BAA4B;AAClF;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc;AACd,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;ACpL2B;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;ACvDA;;AAEe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;ACrFA;AACqB;;AAErB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;;AAEA;;AAEQ;AACR;;;;;;;;;;;;;;;;;ACTA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAA+B,mFAAiD;AAChF,mEAAiC,eAAe;;AAEhD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;ACzIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AClEA;AACA;AACA,iBAAiB,w7DAAw7D,EAAE;AAC38D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;ACrFA,uD;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,8D","file":"argl.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"gl-matrix\"), require(\"hammerjs\"), require(\"webgl-obj-loader\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"gl-matrix\", \"hammerjs\", \"webgl-obj-loader\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ArGL\"] = factory(require(\"gl-matrix\"), require(\"hammerjs\"), require(\"webgl-obj-loader\"));\n\telse\n\t\troot[\"ArGL\"] = factory(root[\"window\"], root[\"Hammer\"], root[\"OBJ\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE_gl_matrix__, __WEBPACK_EXTERNAL_MODULE_hammerjs__, __WEBPACK_EXTERNAL_MODULE_webgl_obj_loader__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import Shader from './shader'\n\nexport default function FBhelper(ArGL) {\n  const quadVertices = [\n    -1.0, 1.0, 0.0,\n    -1.0, -1.0, 0.0,\n    1.0, 1.0, 0.0,\n    1.0, -1.0, 0.0,\n  ]\n  const quadVerticesWithUV = [\n    -1.0, 1.0, 0.0, 0.0, 1.0,\n    -1.0, -1.0, 0.0, 0.0, 0.0,\n    1.0, 1.0, 0.0, 1.0, 1.0,\n    1.0, -1.0, 0.0, 1.0, 0.0,\n  ]\n\n\n  const fbvs = `#version 300 es\n\n  layout (location = 0) in vec3 a_position;\n  layout (location = 1) in vec2 a_texCoord;\n\n  out vec2 TexCoord;\n\n  void main()\n  {\n      TexCoord = a_texCoord;\n      gl_Position = vec4(a_position, 1.0);\n  }\n  `\n\n  const fbfs = `#version 300 es\n\n  precision mediump float;\n\n  out vec4 FragColor;\n  in vec2 TexCoord;\n\n  uniform sampler2D scene;\n\n  void main()\n  {\n    FragColor = texture(scene, TexCoord);\n  }\n  `\n  const depthFS = `#version 300 es\n\n  precision mediump float;\n\n  out vec4 FragColor;\n  in vec2 TexCoord;\n\n  uniform sampler2D depthMap;\n\n  void main()\n  {\n    float depthValue = texture(depthMap, TexCoord).r;\n    FragColor = vec4(vec3(depthValue), 1.0);\n  }\n  `\n\n  ArGL.prototype.drawQuad = function (textures) {\n    // self.gl.bindVertexArray(null)\n    if (this.quadVAO === undefined) {\n      this.quadVAO = this.gl.createVertexArray()\n      let quadVBO = this.gl.createBuffer()\n      this.gl.bindVertexArray(this.quadVAO)\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, quadVBO)\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(quadVerticesWithUV), this.gl.STATIC_DRAW)\n      this.gl.enableVertexAttribArray(0)\n      this.gl.vertexAttribPointer(0, 3, this.gl.FLOAT, true, 20, 0)\n      this.gl.enableVertexAttribArray(1)\n      this.gl.vertexAttribPointer(1, 2, this.gl.FLOAT, true, 20, 12)\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null)\n      this.gl.bindVertexArray(null)\n    }\n    this.gl.bindVertexArray(this.quadVAO)\n    if (textures.length === 1) {\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textures[0])\n    } else {\n      for (let i in textures) {\n        this.gl.activeTexture(this.gl.TEXTURE0 + Number(i))\n        this.gl.bindTexture(this.gl.TEXTURE_2D, textures[i])\n      }\n    }\n\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4)\n    this.gl.bindVertexArray(null)\n  }\n\n  ArGL.prototype.drawFB = function (texture) {\n    if (this.fbShader === undefined) {\n      this.fbShader = new Shader(this.gl, fbvs, fbfs)\n    }\n    this.fbShader.use()\n    this.fbShader.setInt('scene', 0)\n    this.drawQuad([texture])\n  }\n\n  ArGL.prototype.drawDepth = function (texture) {\n    if (this.fbShader === undefined) {\n      this.fbShader = new Shader(this.gl, fbvs, depthFS)\n    }\n    this.fbShader.use()\n    this.fbShader.setInt('depthMap', 0)\n    this.drawQuad([texture])\n  }\n\n  ArGL.prototype.QuadVertices = quadVertices\n  ArGL.prototype.QuadVerticesWithUV = quadVerticesWithUV\n  ArGL.prototype.FBVS = fbvs\n  ArGL.prototype.FBFS = fbvs\n  ArGL.prototype.DEPTHFS = depthFS\n}\n","import { Mesh, initMeshBuffers } from 'webgl-obj-loader'\nimport { mobilecheck, loadImage } from './util'\nimport Input from './input'\nimport FBHelper from './FBHelper'\n\nconst defaultOptions = {\n  desktopInput: true,\n  touchInput: true\n}\n\nclass ArGL {\n  constructor(canvas, options) {\n    if (options) {\n      this.options = Object.assign(defaultOptions, options)\n    } else {\n      this.options = defaultOptions\n    }\n\n    this.canvas = canvas\n\n    this.loadProgress = 0\n\n    this.resource = {\n      images: []\n    }\n    this.resourceCount = 0\n    this._loadProgresses = []\n    let self = this\n    this.loadProgresses = new Proxy(this._loadProgresses, {\n      set: function (target, key, value, receiver) {\n        let sum = self._loadProgresses.reduce((p, v) => { return p + Number(v) }, 0)\n        if (self.resourceCount !== 0 && self.loadProgress !== sum / self.resourceCount) {\n          self.loadProgress = sum / self.resourceCount\n          let Progress = new CustomEvent('progress', { detail: self.loadProgress })\n          self.canvas.dispatchEvent(Progress)\n        }\n        return Reflect.set(target, key, value, receiver)\n      }\n    })\n\n\n    this.gl = this.canvas.getContext('webgl2')\n    if (!this.gl) {\n      console.error('Unable to initialize WebGL2. Your browser or machine may not support it.')\n      return null\n    }\n\n    this.deltaTime = 0\n    this.lastFrame = 0\n\n    if (mobilecheck()) {\n      this.mobile = true\n    } else {\n      this.mobile = false\n    }\n\n    if (this.options.desktopInput) {\n      let dio = { lockPointer: true }\n      if (typeof this.options.desktopInput !== 'boolean') {\n        dio = this.options.desktopInput\n      }\n      let { currentlyPressedKeys, mouseInput } = ArGL.desktopInput(this.canvas, dio)\n      this.currentlyPressedKeys = currentlyPressedKeys\n      this.mouseInput = mouseInput\n    }\n\n    if (this.options.touchInput) {\n      this.touchInput = ArGL.touchInput(this.canvas)\n    }\n  }\n\n  resize() {\n    let displayWidth = this.canvas.clientWidth\n    let displayHeight = this.canvas.clientHeight\n\n    if (this.canvas.width != displayWidth ||\n      this.canvas.height != displayHeight) {\n\n      this.canvas.width = displayWidth\n      this.canvas.height = displayHeight\n    }\n\n    this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height)\n  }\n\n  draw(time) { }\n  started() { }\n\n  render(time) {\n    this.deltaTime = time - this.lastFrame\n    this.lastFrame = time\n    this.resize()\n    this.draw(time)\n\n    if (this.options.touchInput) {\n      this.touchInput.reset()\n    }\n    if (this.options.desktopInput) {\n      this.mouseInput.reset()\n    }\n    requestAnimationFrame(this.render.bind(this))\n  }\n\n  loadMesh(objString) {\n    let mesh = new Mesh(objString)\n    initMeshBuffers(this.gl, mesh)\n    return mesh\n  }\n\n  setMeshVAO(mesh, shader) {\n    let a_position = this.gl.getAttribLocation(shader.program, 'a_position')\n    let a_texCoord = this.gl.getAttribLocation(shader.program, 'a_texCoord')\n    let a_normal = this.gl.getAttribLocation(shader.program, 'a_normal')\n\n    let vao = this.gl.createVertexArray()\n    this.gl.bindVertexArray(vao)\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, mesh.vertexBuffer)\n    this.gl.vertexAttribPointer(a_position, 3, this.gl.FLOAT, false, 0, 0)\n    this.gl.enableVertexAttribArray(a_position)\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, mesh.textureBuffer)\n    this.gl.vertexAttribPointer(a_texCoord, 2, this.gl.FLOAT, false, 0, 0)\n    this.gl.enableVertexAttribArray(a_texCoord)\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, mesh.normalBuffer)\n    this.gl.vertexAttribPointer(a_normal, 3, this.gl.FLOAT, false, 0, 0)\n    this.gl.enableVertexAttribArray(a_normal)\n\n    this.gl.bindVertexArray(null)\n\n    return vao\n  }\n\n  drawMesh(mesh, vao) {\n    this.gl.bindVertexArray(vao)\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, mesh.indexBuffer)\n    this.gl.drawElements(this.gl.TRIANGLES, mesh.indexBuffer.numItems, this.gl.UNSIGNED_SHORT, 0)\n    this.gl.bindVertexArray(null)\n  }\n\n  async start() {\n    let textures = await this.loadTexture()\n    this.render(this.lastFrame)\n    this.textures = textures\n    this.started()\n  }\n\n  setImageResource(images) {\n    this.resource.images = images\n  }\n\n  async loadTexture() {\n    let textures = []\n    this.resourceCount += this.resource.images.length\n    let promises = this.resource.images.map((element, index) => {\n      return loadImage(element, (ratio) => {\n        this.loadProgresses[index] = ratio\n      })\n    })\n\n    let loadedImgs = await Promise.all(promises)\n    this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, true)\n    loadedImgs.forEach((element, index) => {\n      textures[index] = this.gl.createTexture()\n      this.gl.activeTexture(this.gl.TEXTURE0 + index)\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textures[index])\n      this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, element)\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE)\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE)\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR)\n    })\n\n    return textures\n\n  }\n\n}\nArGL.loadImage = loadImage\nInput(ArGL)\nFBHelper(ArGL)\n\nexport default ArGL\n","import { vec3, mat4, quat } from 'gl-matrix'\n\nclass Camera {\n  constructor(position = [0, 0, 0], orientation = [0, 0, 0, 1], zoom = 45) {\n    this.position = position\n    this.orientation = orientation\n    this.zoom = zoom\n    this.update()\n  }\n\n  getViewMatrix() {\n    this.update()\n    let center = vec3.add([], this.position, this.front)\n    let view = mat4.lookAt([], this.position, center, this.up)\n    return view\n  }\n\n  translate(v) {\n    vec3.add(this.position, this.position, v)\n    // this.position += v * this.orientation\n  }\n\n  rotate(angle, axis) {\n    quat.mul(this.orientation, this.orientation, quat.setAxisAngle([], axis, angle))\n    // this.orientation *= glm.angleAxis(angle, axis * this.orientation)\n    this.update()\n  }\n\n  yaw(angle) {\n    this.rotate(angle, this.up)\n  }\n  pitch(angle) {\n    this.rotate(angle, this.right)\n  }\n  roll(angle) {\n    this.rotate(angle, this.front)\n  }\n\n  update() {\n    let m = mat4.fromQuat([], this.orientation)\n    this.right = [-m[0], -m[4], -m[8]]\n    this.up = [m[1], m[5], m[9]]\n    this.front = [m[2], m[6], m[10]]\n  }\n\n  processZoom(yoffset) {\n    if (this.zoom >= 1.0 && this.zoom <= 45.0)\n      this.zoom -= yoffset / 200\n    if (this.zoom <= 1.0)\n      this.zoom = 1.0\n    if (this.zoom >= 45.0)\n      this.zoom = 45.0\n  }\n}\n\nexport default Camera\n","import Camera from './camera'\n\nimport { vec3 } from 'gl-matrix'\n\nconst CameraMovement = {\n  FORWARD: 0,\n  BACKWARD: 1,\n  LEFT: 2,\n  RIGHT: 3,\n  UP: 4,\n  DOWN: 5\n}\n\nclass FreeMoveCamera extends Camera {\n\n  processMove(direction, step) {\n    if (direction == FreeMoveCamera.Movement.FORWARD) {\n      this.translate(vec3.scale([], this.front, step))\n    }\n    if (direction == FreeMoveCamera.Movement.BACKWARD) {\n      this.translate(vec3.scale([], this.front, -step))\n    }\n    if (direction == FreeMoveCamera.Movement.LEFT) {\n      this.translate(vec3.scale([], this.right, -step))\n    }\n    if (direction == FreeMoveCamera.Movement.RIGHT) {\n      this.translate(vec3.scale([], this.right, step))\n    }\n    if (direction == FreeMoveCamera.Movement.UP) {\n      this.translate(vec3.scale([], this.up, step))\n    }\n    if (direction == FreeMoveCamera.Movement.DOWN) {\n      this.translate(vec3.scale([], this.up, -step))\n    }\n  }\n\n  desktopFreeMoveControl(argl, step, mouseSensitivity, keys = ['w', 's', 'a', 'd', ' ', 'Shift', 'q', 'e']) {\n    let currentlyPressedKeys = argl.currentlyPressedKeys\n    if (currentlyPressedKeys.get(keys[0])) {\n      this.processMove(FreeMoveCamera.Movement.FORWARD, step)\n    }\n    if (currentlyPressedKeys.get(keys[1])) {\n      this.processMove(FreeMoveCamera.Movement.BACKWARD, step)\n    }\n    if (currentlyPressedKeys.get(keys[2])) {\n      this.processMove(FreeMoveCamera.Movement.LEFT, step)\n    }\n    if (currentlyPressedKeys.get(keys[3])) {\n      this.processMove(FreeMoveCamera.Movement.RIGHT, step)\n    }\n    if (currentlyPressedKeys.get(keys[4])) {\n      this.processMove(FreeMoveCamera.Movement.UP, step)\n    }\n    if (currentlyPressedKeys.get(keys[5])) {\n      this.processMove(FreeMoveCamera.Movement.DOWN, step)\n    }\n\n    let toRadian = degree => degree / 180 * Math.PI\n    if (argl.currentlyPressedKeys.get(keys[6])) {\n      this.roll(toRadian(-step * 5))\n    }\n    if (argl.currentlyPressedKeys.get(keys[7])) {\n      this.roll(toRadian(step * 5))\n    }\n\n    if (argl.options.desktopInput && argl.options.desktopInput.lockPointer !== false) {\n      let radianX = toRadian(argl.mouseInput.deltaX * mouseSensitivity)\n      let radianY = toRadian(argl.mouseInput.deltaY * mouseSensitivity)\n      this.pitch(radianY)\n      this.rotate(radianX, [0, 1, 0])\n    } else {\n      if (argl.mouseInput.drag) {\n        let radianX = argl.mouseInput.dragX / argl.canvas.clientWidth * Math.PI * 2\n        let radianY = argl.mouseInput.dragY / argl.canvas.clientHeight * Math.PI * 2\n        this.pitch(radianY)\n        this.rotate(radianX, [0, 1, 0])\n      }\n    }\n\n    this.processZoom(argl.mouseInput.wheelDeltaY)\n  }\n\n}\nFreeMoveCamera.Movement = CameraMovement\n\nexport default FreeMoveCamera\n","import Camera from './camera';\nimport { vec3, quat } from 'gl-matrix'\n\nfunction rotateVec(vec, normal, angle) {\n  let direction = vec3.create()\n  let t1 = vec3.create()\n  let t2 = vec3.create()\n\n  vec3.normalize(normal, normal)\n\n  vec3.scale(t1, vec, Math.cos(angle))\n  vec3.cross(t2, normal, vec)\n  vec3.scale(t2, t2, Math.sin(angle))\n  vec3.add(direction, t1, t2)\n  vec3.normalize(direction, direction)\n  return direction\n}\n\nclass OrbitCamera extends Camera {\n  constructor(position = [0, 0, 5], center = [0, 0, 0], zoom = 45) {\n    let direction = vec3.create()\n    vec3.sub(direction, center, position)\n    vec3.normalize(direction, direction)\n\n    let dirX = [direction[0], 0, direction[2]]\n    let dirY = [0, direction[1], Math.sqrt(1 - direction[1] ** 2)]\n    let angleX = vec3.length(dirX) === 0 ? 0 : vec3.angle([0, 0, 1], dirX)\n    angleX = direction[0] > 0 ? -angleX : angleX\n    let angleY = vec3.length(dirY) === 0 ? 0 : vec3.angle([0, 0, 1], dirY)\n    angleY = direction[1] > 0 ? -angleY : angleY\n    let orientation = quat.create()\n\n    super(position, orientation, zoom)\n    this.yaw(angleX)\n    this.pitch(angleY)\n\n    this.center = center\n    this.distance = vec3.distance(center, position)\n\n  }\n\n  processRotate(radianX, radianY) {\n\n    let t1 = vec3.create()\n    vec3.scale(t1, this.front, -1)\n    t1 = rotateVec(t1, [0, 1, 0], -radianX)\n\n    let t2 = vec3.create()\n    vec3.cross(t2, this.up, t1)\n    t1 = rotateVec(t1, t2, -radianY)\n    vec3.scale(t1, t1, this.distance)\n    this.position = t1\n\n    this.rotate(radianX, [0, 1, 0])\n    this.pitch(radianY)\n\n  }\n\n  desktopOrbitControl(argl) {\n    if (argl.mouseInput.drag) {\n      let radianX = argl.mouseInput.dragX / argl.canvas.clientWidth * Math.PI * 2\n      let radianY = argl.mouseInput.dragY / argl.canvas.clientHeight * Math.PI * 2\n      this.processRotate(radianX, radianY)\n    }\n    this.processZoom(argl.mouseInput.wheelDeltaY)\n  }\n\n  mobileOrbitControl(argl) {\n    let radianX = argl.touchInput.pan.deltaX / argl.canvas.clientWidth * Math.PI * 2\n    let radianY = argl.touchInput.pan.deltaY / argl.canvas.clientHeight * Math.PI * 2\n    this.processRotate(radianX, radianY)\n    this.processZoom(argl.touchInput.pitch.scale * 10000)\n  }\n\n}\n\nexport default OrbitCamera\n","import ArGL from './argl'\nimport Camera from './camera/camera'\nimport Shader from './shader'\nimport OrbitCamera from './camera/orbit-camera'\nimport FreeMoveCamera from './camera/free-move-camrea'\n\nimport * as util from './util'\n\nexport { ArGL, Camera, Shader, OrbitCamera, FreeMoveCamera, util }\nexport default ArGL\n","import * as Hammer from 'hammerjs'\n\nexport default function Input(Argl) {\n  Argl.desktopInput = function (el, options) {\n    let currentlyPressedKeys = new Map()\n    let mouseInput = {\n      deltaX: 0,\n      deltaY: 0,\n      wheelDeltaY: 0\n    }\n\n    function handleKeyDown(e) {\n      currentlyPressedKeys.set(e.key, true)\n    }\n    function handleKeyUp(e) {\n      currentlyPressedKeys.set(e.key, false)\n    }\n    function mouse_callback(e) {\n      mouseInput.deltaX = e.movementX || 0\n      mouseInput.deltaY = e.movementY || 0\n      if (mouseInput.drag) {\n        mouseInput.dragX = e.movementX || 0\n        mouseInput.dragY = e.movementY || 0\n      }\n    }\n    function wheel_callback(e) {\n      mouseInput.wheelDeltaY = e.wheelDeltaY\n    }\n    function handleDragStart() {\n      mouseInput.drag = true\n      mouseInput.dragX = 0\n      mouseInput.dragY = 0\n    }\n    function handleDragEnd() {\n      mouseInput.drag = false\n    }\n    function addInputListener() {\n      document.addEventListener('keydown', handleKeyDown)\n      document.addEventListener('keyup', handleKeyUp)\n      document.addEventListener('mousemove', mouse_callback)\n      document.addEventListener('mousedown', handleDragStart)\n      document.addEventListener('mouseup', handleDragEnd)\n      document.addEventListener('wheel', wheel_callback)\n    }\n    function removeInputListener() {\n      document.removeEventListener('keydown', handleKeyDown)\n      document.removeEventListener('keyup', handleKeyUp)\n      document.removeEventListener('mousemove', mouse_callback)\n      document.removeEventListener('mousedown', handleDragStart)\n      document.removeEventListener('mouseup', handleDragEnd)\n      document.removeEventListener('wheel', wheel_callback)\n    }\n\n    if (options.lockPointer) {\n      el.requestPointerLock = el.requestPointerLock ||\n        el.mozRequestPointerLock\n      el.exitPointerLock = el.exitPointerLock ||\n        el.mozExitPointerLock\n      el.onclick = function () {\n        el.requestPointerLock()\n      }\n      document.addEventListener('pointerlockchange', handleLockChange, false)\n      document.addEventListener('mozpointerlockchange', handleLockChange, false)\n      function handleLockChange() {\n        if (document.pointerLockElement === el ||\n          document.mozPointerLockElement === el) {\n          addInputListener()\n        } else {\n          removeInputListener()\n        }\n      }\n    } else {\n      el.contentEditable = 'true'\n      el.style.cursor = 'default'\n      el.addEventListener('focus', addInputListener)\n      el.addEventListener('blur', removeInputListener)\n    }\n\n    mouseInput.reset = function () {\n      this.deltaX = 0\n      this.deltaY = 0\n      if (this.drag) {\n        this.dragX = 0\n        this.dragY = 0\n      }\n      this.wheelDeltaY = 0\n    }\n\n    return { currentlyPressedKeys, mouseInput }\n  }\n\n  Argl.touchInput = function (el) {\n\n    let pan = {\n      lastX: 0,\n      lastY: 0,\n      deltaX: 0,\n      deltaY: 0\n    }\n    let pitch = {\n      scale: 0,\n      lastScale: 1\n    }\n    let hammer = new Hammer.Manager(el)\n    hammer.add(new Hammer.Pan({ direction: Hammer.DIRECTION_ALL, threshold: 10 }))\n    hammer.add(new Hammer.Pinch({ threshold: 0 }))\n\n    hammer.on('panstart', function (e) {\n      pan.lastX = 0\n      pan.lastY = 0\n      pan.deltaX = e.deltaX\n      pan.deltaY = e.deltaY\n    })\n    hammer.on('panmove', function (e) {\n      pan.deltaX = e.deltaX - pan.lastX\n      pan.deltaY = e.deltaY - pan.lastY\n      pan.lastX = e.deltaX\n      pan.lastY = e.deltaY\n    })\n\n    hammer.on('pinchstart', function () {\n      pitch.scale = 0\n      pitch.lastScale = 1\n    })\n    hammer.on('pinchmove', function (e) {\n      pitch.scale = e.scale / pitch.lastScale - 1\n      pitch.lastScale = e.scale\n    })\n\n    let touchInput = { pan, pitch }\n    touchInput.reset = function () {\n      this.pan.deltaX = 0\n      this.pan.deltaY = 0\n      this.pitch.scale = 0\n    }\n    return touchInput\n  }\n\n}\n","\nexport default class Shader {\n  constructor(gl, vsSource, fsSource) {\n    let vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource)\n    let fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource)\n\n    // 创建着色器程序\n    let shaderProgram = gl.createProgram()\n    gl.attachShader(shaderProgram, vertexShader)\n    gl.attachShader(shaderProgram, fragmentShader)\n    gl.linkProgram(shaderProgram)\n    gl.deleteShader(vertexShader)\n    gl.deleteShader(fragmentShader)\n    // 创建失败\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n      console.error('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram))\n      return null\n    }\n\n    this.gl = gl\n    this.program = shaderProgram\n  }\n\n  use() {\n    this.gl.useProgram(this.program)\n  }\n\n  setBool(name, value) {\n    this.gl.uniform1i(this.gl.getUniformLocation(this.program, name), Number(value))\n  }\n  setInt(name, value) {\n    this.gl.uniform1i(this.gl.getUniformLocation(this.program, name), Math.round(Number(value)))\n  }\n  setFloat(name, value) {\n    this.gl.uniform1f(this.gl.getUniformLocation(this.program, name), Number(value))\n  }\n  setVec2(name, vec2) {\n    this.gl.uniform2fv(this.gl.getUniformLocation(this.program, name), vec2)\n  }\n  setVec3(name, vec3) {\n    this.gl.uniform3fv(this.gl.getUniformLocation(this.program, name), vec3)\n  }\n  setVec4(name, vec4) {\n    this.gl.uniform4fv(this.gl.getUniformLocation(this.program, name), vec4)\n  }\n  setMat2(name, mat2) {\n    this.gl.uniformMatrix2fv(this.gl.getUniformLocation(this.program, name), false, mat2)\n  }\n  setMat3(name, mat3) {\n    this.gl.uniformMatrix3fv(this.gl.getUniformLocation(this.program, name), false, mat3)\n  }\n  setMat4(name, mat4) {\n    this.gl.uniformMatrix4fv(this.gl.getUniformLocation(this.program, name), false, mat4)\n  }\n\n}\n\nfunction loadShader(gl, type, source) {\n  const shader = gl.createShader(type)\n  gl.shaderSource(shader, source)\n  gl.compileShader(shader)\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    console.error('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader))\n    gl.deleteShader(shader)\n    return null\n  }\n  return shader\n}\n","\nexport function mobilecheck() {\n  let check = false;\n  (function (a) { if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor || window.opera)\n  return check\n}\n\nexport function loadImage(imageUrl, onprogress) {\n  return new Promise((resolve, reject) => {\n    let xhr = new XMLHttpRequest()\n    let notifiedNotComputable = false\n\n    xhr.open('GET', imageUrl, true)\n    xhr.responseType = 'arraybuffer'\n\n    xhr.onprogress = function (ev) {\n      if (ev.lengthComputable) {\n        onprogress(Math.round((ev.loaded / ev.total) * 100))\n      } else {\n        if (!notifiedNotComputable) {\n          notifiedNotComputable = true\n          onprogress(-1)\n        }\n      }\n    }\n\n    xhr.onloadend = function () {\n      if (!xhr.status.toString().match(/^2/)) {\n        reject(xhr)\n      } else {\n        if (!notifiedNotComputable) {\n          onprogress(100)\n        }\n\n        let options = {}\n        let headers = xhr.getAllResponseHeaders()\n        let m = headers.match(/^Content-Type\\:\\s*(.*?)$/mi)\n\n        if (m && m[1]) {\n          options.type = m[1]\n        }\n\n        let blob = new Blob([this.response], options)\n        let imageUrl = window.URL.createObjectURL(blob)\n        let img = new Image()\n        img.src = imageUrl\n        img.onload = () => resolve(img)\n      }\n    }\n\n    xhr.send()\n  })\n}\n\nexport function loadBinary(uri, onprogress) {\n  return new Promise((resolve, reject) => {\n    let xhr = new XMLHttpRequest()\n    let notifiedNotComputable = false\n\n    xhr.open('GET', uri, true)\n    xhr.responseType = 'arraybuffer'\n\n    xhr.onprogress = function (ev) {\n      if (ev.lengthComputable) {\n        onprogress(Math.round((ev.loaded / ev.total) * 100))\n      } else {\n        if (!notifiedNotComputable) {\n          notifiedNotComputable = true\n          onprogress(-1)\n        }\n      }\n    }\n\n    xhr.onloadend = function () {\n      if (!xhr.status.toString().match(/^2/)) {\n        reject(xhr)\n      } else {\n        if (!notifiedNotComputable) {\n          onprogress(100)\n        }\n        resolve(this.response)\n      }\n    }\n    xhr.send()\n  })\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE_gl_matrix__;","module.exports = __WEBPACK_EXTERNAL_MODULE_hammerjs__;","module.exports = __WEBPACK_EXTERNAL_MODULE_webgl_obj_loader__;"],"sourceRoot":""}